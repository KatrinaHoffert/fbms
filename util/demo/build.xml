<project name="FBMS" default="run" basedir=".">
	<!-- Folders -->
	<property name="src" value="src" />
	<property name="build" value="build" />
	<property name="lib"  value="lib" />
	<!-- Names -->
	<property name="mainClass" value="DemoMain" />
	<!-- Classpath for libraries. Note the inclusion of the build dir
	     so we can find the class files (since base dir is .) -->
	<property name="classpath" value="lib/jnotify-0.94.jar:lib/sqlite-jdbc-3.7.15-M1.jar:lib/java-diff-utils-1.3.0.jar:lib/log4j-1.2.17.jar:${build}" />

	<!-- Compiles the sources -->
	<target name="compile">
		<mkdir dir="${build}" />
		<!-- Compile the java code from ${src} into ${build}. Don't include the 
			 buggy ANT runtime. Classpath is crucial for libraries -->
		<javac debug="true" srcdir="${src}" destdir="${build}" classpath="${classpath}" includeantruntime="false" />
		<!-- Dynamic libraries must be in same folder as class files -->
		<copy file="${lib}/libjnotify.so" todir="${build}"/>
		<copy file="${lib}/jnotify.dll" todir="${build}"/>
		<copy file="${lib}/jnotify_64bit.dll" todir="${build}"/>
		<copy file="${lib}/libjnotify.jnilib" todir="${build}"/>
		<!-- And copy the logging property file -->
		<copy file="${src}/log4j.properties" todir="${build}"/>
	</target>

	<!-- Runs the program -->
	<target name="run" depends="compile">
		<!-- Runs the program with the correct arguments. The fork ensures a fresh JVM -->
		<java dir="${build}" classname="${mainClass}" fork="true" classpath="${classpath}" />
	</target>

	<!-- Deletes junk. Note that nothing in the build folder is safe! -->
	<target name="clean">
		<delete dir="${build}" />
	</target>
</project>